js六大数据类型：
1.number，如：var a = 10.2;//数字 整数 number
2.string，如：var b = 'Jery老师';字符串 string，注意单双引号不分
3.boolean
4.function，如：function Jery(){
			alert(11);
		}
5.undefined，如：var h;//声明了没赋值就是undefined  未定义
6.object，如：var e = [1,2,"3"];var d = new Date();var r = new RegExp();var j ={name:"Jery",age:18};//object(array,null,Date,RegExp,json（这些都属于object类型！！！）)

判断一个变量或者对象是什么数据类型可以通过alert(typeof xxx);来判断
判断一个对象是不是数组可以通过alert(Array.isArray(xxx));//如果是真数组返回true,否则是false!!!

注意:只有js里的对象可以像这样：j.weight = "40kg";
var j ={name:"Jery",age:18};动态绑定属性，但是除了null对象外！！！

显式类型转换：Number(); parseInt(); parseFloat();
 
Number()如：var str = "200";var s = Number(str);alert(Number(str));//200；var str1 = "200px";//alert(Number(str1))	 ;//NaN(不是一个数值，但还是一个数据类型，从左到右判断只要出现一个不是数字的字符就会输出NaN)//alert(typeof Number(str1));--->number

注意：1.var str3 = false;//true代表1 /false代表0，所以alert(Number(str3));输出0；
2.var str4 = null;//null代表0//alert(Number(str4));输出0；var str7 = {};//alert(Number(str7));输出的是NaN;var str8 = '';//当为""或[]或""或''输出的都是0//alert(Number(str8));

parsetInt()如：	var a = "200px";//alert(parseInt(a));//输出200，用来处理字符串或者数字//alert(typeof parseInt(a));//---》number
注意：parsetInt()它是从第一位开始判断是否为数字(除了+或-)，直到遇到不是数字而输出整数，如果第一位就不是数字，就会输出NaN;如：var b="200px1231231";
var c = "px200";alert(parseInt(c));//NaN//alert(parseInt(b));//200！！！

parsetFloat()如：var d = 200.95;//alert(Number(d));//NaN//alert(parseInt(d));//200//alert(parseFloat(d));//200.95
注意：//alert(Math.floor(d));//向下取整 200
	//alert(Math.ceil(d));//向上取整 201
	//alert(Math.round(d));//四舍五入取整 201

	var j = "2/2";
	//alert(parseInt(j));//输出2
	//alert(parseFloat(j));//输出2
	//alert(eval(j));输出1，可以将2/2按除法来算！！！

隐式类型转换：
当String类与Number类用“+”连接，类型默认转成String类型，如：100+"1"=="1001",直接在后面补上。

当String类与Number类用“-”，“*”，“/”,“%”，“++”，“--”，类型默认转成Number类型，如："200"-3==197;

当String类与Number类用>或<来比较时，string隐式转换成number,如：'10' > 2是true 字符串比较对应位置比较（第一位比较如果无法比较出来就看下一位，位值比较不出就看长，谁长谁大！！！）如：'10' > '2'是false，“20”>"2"是true

当String类与Number类用==或!或!=或===比较时，相应成立转成相应布尔值true或false;如：//alert(1!=3);返回true//alert(1=='1');返回true，只比较数值//alert(1==='1');返回false//严格匹配，值相等并且数据类型也要相等

注意：NaN：（ not a number ）不是一个数字但是是一个number类型！！！
1.出现NaN,一般说明我们进行了非法的运算
2.NaN和它自己都不相等，如：NaN==NaN在条件语句中返回的是false
3.NaN是假(false类的有：NaN 0(数字零) null undefined "" '')

isNaN() :	
is not a number // 是不是（is） 不是数字啊？	
//是数字  false	
//不是数字  true	
//先根据 Number() 转换以后，再判断是不是数字如：
alert(isNaN("adasd"))//返回true
alert(isNaN("324"));//返回false
alert(isNaN(true));//返回false

null 与 undefined的区别（面试五星级）三个层面进行区分：
1.数据类型层面不同		
undefined是一个undefined数据类型null:他是object数据类型	
2.内存分配方面		
undefined:如果一个变量没有赋值操作就是undefined	
nl:代表的是对象默认值,可以清空对象
如：var json = {
	username:"Jery",
	age:18
};
//json=null;，null不能绑定属性
//delete json.username;删除属性
//alert(json.username+"==="+json.age);	
3.运算中的不同，如：var n = 1+undefined;alert(n);输出NaN
var nn = 1+null;alert(nn);输出1

&&（与）作用：只要条件中有一个为false那么就是false,只有全部为true才是true
||（或）作用：只要条件中有一个为true那么就是true,只有全部为false才是false

for循环：循环代码块一定的次数
While循环：While 循环会在指定条件为真时循环执行代码块。
do while循环：do/while 循环是 while 循环的变体。在检查条件是否为真之前，该循环至少会执行一次代码块，然后如果条件为真的话，就会重复这个循环。
for(var i=0;i<10;i++){
	if(i==4){
		//continue;
		//break;
	}
		console.log(i);//在控制台输出
		document.write(i+"<br/>");//在页面打印出来
}
continue关键字：continue的作用是跳过循环体中剩余的语句而强行执行下一次循环。break关键字：break的作用是跳过循环本中剩余的语句并结束整个循环
记住continue和break只用在循环语句中！！！
return;经常用于代码的终止调试，后面的代码不会执行，这是在函数中用来终止代码执行的关键词！！！如下：
		function Jery(){
			alert(1);
			alert(2);
			return;
			alert(3);
		}
		Jery();

所有浏览器都支持获取元素两种方式：	
1.document.getElementById(id名称);       2.document.getElementsByTagName("标签名称");
注意：	第一个是通过id来获取dom对象，第二个是通过标签名称来获取对象，返回多个对象，是一个类数组。在js里面要想动态给这些对象绑定事件，就必须通过循环方式(遍历)来进行单独绑定。其次：注意根据id获取的是静态的，根据标签名获取的是动态的！！！
如下：
		window.onload = function(){
			var ulDom = document.getElementById("list");
			var liDoms = ulDom.getElementsByTagName("li");
			alert(typeof liDoms);//不是一个数组只是一个类数组，可以通过Array.isArray(xxx);来判断
			liDoms.onclick = function(){
				alert(1);
			};//不能这样给liDoms绑定事件
			
			for(var i=0;i<liDoms.length;i++){
				liDoms[i].asda = i;//不写这句，alert后的输出结果为全4！！！
				liDoms[i].onclick = function(){
					alert(this.asda);
				}
			}
		};

document.body.innerHTML = "<ul id='list'>ululul</ul>";//可以通过innnerHTML动态添时加元素，最外层用双引号，里层就用单引号，反之也是这样！！！